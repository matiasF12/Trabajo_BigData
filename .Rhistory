select(Casen2017, r9b)%>% unique
Casen2017$r9b[Casen2017$r9b == ""] <- No
Casen2017$r9b[Casen2017$r9b == ""] <- "No"
#muestra que categorias tiene la variable
select(Casen2017, r9b)%>% unique
select(Casen2017, r9b)%>% count("rb9")
str(Casen2017)
sapply(Casen2017, function(x) sum(is.na(x)))
###no sabemos si usar qaut o qautr (autonomo nacional o regional)
Casen2017 <- Casen_2017%>%
select(region, zona, sexo, edad, ecivil, e6a, ch1, y1, y2_hrs, y3a, s4, expr, qaut, qautr)%>%
filter(edad>=15) %>% filter(ch1=="Asalariado") %>% arrange(region,edad,y1)
select(Casen2017, region)%>% count("region")
#muestra que categorias tiene la variable
select(Casen2017, r9b)%>% unique
#muestra que categorias tiene la variable
select(Casen2017, region)%>% unique
rm(unwanted_array)
#creacion de variable niv_Educ
Casen2017 <- mutate(Casen_2017, niv_educ = e6a)
str(Casen2017)
#agrupar niveles educacionales (pre basica, basica, media, universitaria, post universitaria)
### No puedo hacer que sala cuna, jardin infantil y pre kinder o kinder sean una sola (pre basica)
Casen2017$niv_educ[Casen2017$niv_educ == "3"] <- 2
###no sabemos si usar qaut o qautr (autonomo nacional o regional)
Casen2017 <- Casen_2017%>%
select(region, zona, sexo, edad, ecivil, e6a, ch1, y1, y2_hrs, y3a, s4, expr, qaut, qautr)%>%
filter(edad>=15) %>% filter(ch1=="Asalariado") %>% arrange(region,edad,y1)
#creacion de variable niv_Educ
Casen2017 <- mutate(Casen_2017, niv_educ = e6a)
###no sabemos si usar qaut o qautr (autonomo nacional o regional)
Casen2017 <- Casen_2017%>%
select(region, zona, sexo, edad, ecivil, e6a, ch1, y1, y2_hrs, y3a, s4, expr, qaut, qautr)%>%
filter(edad>=15) %>% filter(ch1=="Asalariado") %>% arrange(region,edad,y1)
#creacion de variable niv_Educ
Casen2017 <- mutate(Casen2017, niv_educ = e6a)
#agrupar niveles educacionales (pre basica, basica, media, universitaria, post universitaria)
### No puedo hacer que sala cuna, jardin infantil y pre kinder o kinder sean una sola (pre basica)
Casen2017$niv_educ[Casen2017$niv_educ == "3"] <- 2
View(Casen2017)
#agrupar niveles educacionales (pre basica, basica, media, universitaria, post universitaria)
### No puedo hacer que sala cuna, jardin infantil y pre kinder o kinder sean una sola (pre basica)
Casen2017$niv_educ[Casen2017$niv_educ == "Sala cuna"] <- "Educacion Pre basica"
Casen2017$niv_educ <- as.character(Casen2017$niv_educ)
str(Casen2017)
#agrupar niveles educacionales (pre basica, basica, media, universitaria, post universitaria)
### No puedo hacer que sala cuna, jardin infantil y pre kinder o kinder sean una sola (pre basica)
Casen2017$niv_educ[Casen2017$niv_educ == "Sala cuna"] <- "Educacion Pre basica"
#muestra que categorias tiene la variable
select(Casen2017, e6a)%>% unique
select(Casen2017, region)%>% count("e6a")
Casen2017$niv_educ[Casen2017$niv_educ == "Jardín Infantil (Medio menor y Medio mayor)"] <- "Educacion pre Basica"
#agrupar niveles educacionales (pre basica, basica, media, universitaria, post universitaria)
### No puedo hacer que sala cuna, jardin infantil y pre kinder o kinder sean una sola (pre basica)
Casen2017$niv_educ[Casen2017$niv_educ == "Sala cuna"] <- "Educacion Pre basica"
#agrupar niveles educacionales (pre basica, basica, media, universitaria, post universitaria)
### No puedo hacer que sala cuna, jardin infantil y pre kinder o kinder sean una sola (pre basica)
Casen2017$niv_educ[Casen2017$niv_educ == "Sala cuna"] <- "Educacion Pre basica"
Casen2017$niv_educ[Casen2017$niv_educ == "Jardín Infantil (Medio menor y Medio mayor)"] <- "Educacion pre Basica"
#agrupar niveles educacionales (pre basica, basica, media, universitaria, post universitaria)
### No puedo hacer que sala cuna, jardin infantil y pre kinder o kinder sean una sola (pre basica)
Casen2017$niv_educ[Casen2017$niv_educ == "Sala cuna"] <- "Educacion Pre basica"
rm(Casen2017)
###no sabemos si usar qaut o qautr (autonomo nacional o regional)
Casen2017 <- Casen_2017%>%
select(region, zona, sexo, edad, ecivil, e6a, ch1, y1, y2_hrs, y3a, s4, expr, qaut, qautr)%>%
filter(edad>=15) %>% filter(ch1=="Asalariado") %>% arrange(region,edad,y1)
#muestra que categorias tiene la variable
select(Casen2017, e6a)%>% unique
select(Casen2017, region)%>% count("e6a")
#creacion de variable niv_Educ
Casen2017 <- mutate(Casen2017, niv_educ = e6a)
Casen2017$niv_educ <- as.character(Casen2017$niv_educ)
Casen2017$niv_educ[Casen2017$niv_educ == "Jardín Infantil (Medio menor y Medio mayor)"] <- "Educacion pre Basica"
Casen2017$niv_educ[Casen2017$niv_educ == "Sala cuna"] <- "Educacion pre basica"
Casen2017$niv_educ[Casen2017$niv_educ == "Prekinder/Kinder (Transición menor y Transición Mayor)"] <- "Educacion pre basica"
Casen2017$niv_educ[Casen2017$niv_educ == "Educación Especial (Diferencial)"] <- "Educacion basica"
Casen2017$niv_educ[Casen2017$niv_educ == "Primaria o Preparatoria (Sistema antiguo)"] <- "Educacion basica"
Casen2017$niv_educ[Casen2017$niv_educ == "Educación Básica"] <- "Educacion basica"
Casen2017$niv_educ[Casen2017$niv_educ == "Humanidades (Sistema Antiguo)"] <- "Educacion media"
Casen2017$niv_educ[Casen2017$niv_educ == "Educación Media Científico-Humanista"] <- "Educacion media"
Casen2017$niv_educ[Casen2017$niv_educ == "Educación Media Técnica Profesional"] <- "Educacion media"
Casen2017$niv_educ[Casen2017$niv_educ == "Técnica, Comercial, Industrial o Normalista (Sistema Antiguo)"] <- "Educacion media"
Casen2017$niv_educ[Casen2017$niv_educ == "Técnica, Comercial, Industrial o Normalista (Sistema Antiguo"] <- "Educacion media"
Casen2017$niv_educ <- as.factor(Casen2017$niv_educ)
str(Casen2017)
#####ejercicio 1 prueba######
####NO ME DIO#####
ordenamiento <- function(a,b,c,d){
if(a > b){
tmp <- a
a <- b
b <- tmp
}
if(c > d){
tmp <- c
c <- d
d <- tmp
}
if(b > c){
tmp <- b
b <- c
c <- tmp
}
print(paste(a,b,c,d, sep = "-"))
}
ordenamiento(4,6,3,1)
#####ejercicio 1 prueba######
####NO ME DIO#####
ordenamiento <- function(a,b,c,d){
if(a > b){
tmp <- a
a <- b
b <- tmp
}
if(c > d){
tmp <- c
c <- d
d <- tmp
}
if(b > c){
tmp <- b
b <- c
c <- tmp
}
print(paste(a,b,c,d, sep = "-"))
}
ordenamiento(4,6,3,1)
vec <- c(23, 423, 42, 5, 324, 325, 64, 36734, 7, 356, 67, 45, 62, 5, 23, 623, 21523, 5)
numeros <- 1:1000
numeros <- 1:100000
for(numero in numeros){
#para que solo muestre un avance y no todos los numeros
Porcentaje <- numero/length(numeros)*100
if(Porcentaje %% 10 == 0){
print(paste(Porcentaje,"%"))
print(numero)
}
}
vec <- c(23, 423, 42, 5, 324, 325, 64, 36734, 7, 356, 67, 45, 62, 5, 23, 623, 21523, 5)
for(repeticion in 1:length(vec)){
print(paste("#################################### Repeticion Nro", repeticion, "####################"))
for (posicion in 1:(length(vec)-1)) {
print(paste("************************************ iteracion nro", posicion, "******************************"))
print(paste("Cuando posicion vale", posicion, "entonces el valor de vec[posicion] es", vec[posicion]))
print(paste("Cuando posicion vale", posicion+1, "entonces el valor de vec[posicion+1] es", vec[posicion+1]))
if(vec[posicion] > vec[posicion+1]){
tmp <- vec[posicion]
vec[posicion] <- vec[posicion+1]
vec[posicion+1] <- tmp
}
print("........................Cambiados mayores por menores...............")
print(paste("Cuando posicion vale", posicion, "entonces el valor de vec[posicion] es", vec[posicion]))
print(paste("Cuando posicion vale", posicion+1, "entonces el valor de vec[posicion+1] es", vec[posicion+1]))
}
}
vec
install.packages("foreign")
library("tidyverse")
library(readstata13)
library(foreign)
Casen_2017 <- read.dta("C:/Users/Matias/Downloads/BRECHA SALARIAL/INFORMACION_PARA_TESIS_/BASES DE DATO CASEN SIN MODIFICAR/Casen 2017.dta")
library(haven)
Casen_2017 <- read_dta("C:/Users/Matias/Downloads/BRECHA SALARIAL/INFORMACION_PARA_TESIS_/BASES DE DATO CASEN SIN MODIFICAR/Casen 2017.dta")
View(Casen_2017)
Casen_2017 <- Casen_2017 <- read.dta("C:/Users/Matias/Downloads/BRECHA SALARIAL/INFORMACION_PARA_TESIS_/BASES DE DATO CASEN SIN MODIFICAR/Casen 2017.dta")
library(foreign)
install.packages("foreign")
install.packages("foreign")
install.packages("foreign")
library("tidyverse")
library(foreign)
Casen_2017 <- read.dta("C:/Users/Matias/Downloads/BRECHA SALARIAL/INFORMACION_PARA_TESIS_/BASES DE DATO CASEN SIN MODIFICAR/Casen 2017.dta")
?read.dta
vec <- c(23, 423, 42, 5, 324, 325, 64, 36734, 7, 356, 67, 45, 62, 5, 23, 623, 21523, 5)
for(repeticion in 1:length(vec)){
print(paste("#################################### Repeticion Nro", repeticion, "####################"))
for (posicion in 1:(length(vec)-1)) {
print(paste("************************************ iteracion nro", posicion, "******************************"))
print(paste("Cuando posicion vale", posicion, "entonces el valor de vec[posicion] es", vec[posicion]))
print(paste("Cuando posicion vale", posicion+1, "entonces el valor de vec[posicion+1] es", vec[posicion+1]))
if(vec[posicion] > vec[posicion+1]){
tmp <- vec[posicion]
vec[posicion] <- vec[posicion+1]
vec[posicion+1] <- tmp
}
print("........................Cambiados mayores por menores...............")
print(paste("Cuando posicion vale", posicion, "entonces el valor de vec[posicion] es", vec[posicion]))
print(paste("Cuando posicion vale", posicion+1, "entonces el valor de vec[posicion+1] es", vec[posicion+1]))
}
}
Numeros <- c(4,6,7,4,5,6,4,5,6,7,4,3,2,4,6,5,7,8,2)
median(Numeros)
Numeros <- c(4,6,7,4,5)
median(Numeros)
# Elaborar una funcion que entregue la media, mediana, max y min de un vector con N datos.
# Entrada: Vec numeros (enteros o integer) --> Salida: - Media: Double
#                                                      - Mediana: Double
median(Numeros)
Numeros <- c(4,6,7,4,5,4,9,7)
median(Numeros)
for (valor in 1:(length(Numeros)-1)){
if(Numeros[valor] > Numeros[valor+1]){
tmp <- Numeros[valor]
vec[valor] <- Numeros[valor+1]
Numeros[valor+1] <- tmp
}
}
for (valor in 1:(length(Numeros)-1)){
if(Numeros[valor] > Numeros[valor+1]){
tmp <- Numeros[valor]
Numeros[valor] <- Numeros[valor+1]
Numeros[valor+1] <- tmp
}
}
Numeros
Numeros <- c(4,6,7,4,5,4,9,7)
vec <- c(23, 423, 42, 5, 324, 325, 64, 36734, 7, 356, 67, 45, 62, 5, 23, 623, 21523, 5)
vec <- c(23, 423, 42, 5, 324, 325, 64, 36734, 7, 356, 67, 45, 62, 5, 23, 623, 21523, 5)
for(repeticion in 1:length(vec)){
print(paste("#################################### Repeticion Nro", repeticion, "####################"))
for (posicion in 1:(length(vec)-1)) {
print(paste("************************************ iteracion nro", posicion, "******************************"))
print(paste("Cuando posicion vale", posicion, "entonces el valor de vec[posicion] es", vec[posicion]))
print(paste("Cuando posicion vale", posicion+1, "entonces el valor de vec[posicion+1] es", vec[posicion+1]))
if(vec[posicion] > vec[posicion+1]){
tmp <- vec[posicion]
vec[posicion] <- vec[posicion+1]
vec[posicion+1] <- tmp
}
print("........................Cambiados mayores por menores...............")
print(paste("Cuando posicion vale", posicion, "entonces el valor de vec[posicion] es", vec[posicion]))
print(paste("Cuando posicion vale", posicion+1, "entonces el valor de vec[posicion+1] es", vec[posicion+1]))
}
}
vec
Numeros <- c(4,6,7,4,5,4,9,7)
for (valor in 1:(length(Numeros)-1)){
if(Numeros[valor] > Numeros[valor+1]){
tmp <- Numeros[valor]
Numeros[valor] <- Numeros[valor+1]
Numeros[valor+1] <- tmp
}
}
Numeros
for (valor in 1:(length(Numeros)-1)){
if(Numeros[valor] > Numeros[valor+1]){
tmp <- Numeros[valor]
Numeros[valor] <- Numeros[valor+1]
Numeros[valor+1] <- tmp
}
}
Numeros
Numeros <- c(4,6,7,4,5,4,9,7)
for (valor in 1:(length(Numeros)-1)){
if(Numeros[valor] > Numeros[valor+1]){
tmp <- Numeros[valor]
Numeros[valor] <- Numeros[valor+1]
Numeros[valor+1] <- tmp
}
}
Numeros
for (repeticion in 1:length(Numeros)){
for(valor in 1:length(Numeros)-1){
if(Numeros[valor] > Numeros[valor+1]){
tmp <- Numeros[valor]
Numeros[valor] <- Numeros[valor+1]
Numeros[valor+1] <- tmp
}
}
}
for (repeticion in 1:length(Numeros)){
for(valor in 1:(length(Numeros)-1)){
if(Numeros[valor] > Numeros[valor+1]){
tmp <- Numeros[valor]
Numeros[valor] <- Numeros[valor+1]
Numeros[valor+1] <- tmp
}
}
}
Numeros
length(Numeros)/2
if(length(Numeros)%% 2 == 0){
posicion <- (length(Numeros)/2)
Mediana <- (Numeros[posicion]+ Numeros[posicion+1])/2
}
if(length(Numeros)%% 2 == 0){
Mediana <- (Numeros[(length(Numeros)/2)]+ Numeros[(length(Numeros)/2)+1])/2
}else if(length(Numeros)%% 2 != 0){
Mediana <- (Numeros[((length(Numeros)-1)/2)+1])
}
Numeros
if(length(Numeros)%% 2 == 0){
Mediana <- (Numeros[(length(Numeros)/2)]+ Numeros[(length(Numeros)/2)+1])/2
print(paste("La mediana es", Mediana, "para este vector"))
}else if(length(Numeros)%% 2 != 0){
Mediana <- (Numeros[((length(Numeros)-1)/2)+1])
print(paste("La mediana es", Mediana, "para este vector"))
}
Numeros
if(length(Numeros)%% 2 == 0){
Mediana <- (Numeros[(length(Numeros)/2)]+ Numeros[(length(Numeros)/2)+1])/2
print(paste("La mediana es", Mediana, "para este vector"))
}else if(length(Numeros)%% 2 != 0){
Mediana <- (Numeros[((length(Numeros)-1)/2)+1])
print(paste("La mediana es", Mediana, "para este vector"))
}
sumar <- sum(length(Numeros))
sumar
rm(sumar)
if(length(Numeros)%% 2 == 0){
Mediana <- (Numeros[(length(Numeros)/2)]+ Numeros[(length(Numeros)/2)+1])/2
print(paste("La mediana es", Mediana, "para este vector"))
}else if(length(Numeros)%% 2 != 0){
Mediana <- (Numeros[((length(Numeros)-1)/2)+1])
print(paste("La mediana es", Mediana, "para este vector"))
}
library("rvest")
library("gdata")
#[paso 1] data de los libros
Informacion_bookthe <- data.frame()
urlbookthepository <- paste("https://www.bookdepository.com/es/category/3391/Teen-Young-Adult?searchLang=404&page=")
#Descarga de pagina bookthepository
bookthepository <- read_html(urlbookthepository)
#listado de libros
listado_productos <- html_nodes(bookthepository, ".content-block")
#listado productos individuales
listado_individual <- html_nodes(listado_productos, ".book-item")
for(producto in listado_individual){
print("=========================== ITEMS =======================")
#titulos libros
libro <- html_nodes(producto, css = ".title")
#link_libro <- html_nodes(libro, css = "a")
#link_libro <- html_attr(link_libro,"href")
#texto_link <- (paste("https://www.bookdepository.com",link_libro, sep = ""))
texto_libro <- html_text(libro)
texto_libro <- gsub("\n","", texto_libro)
texto_libro <- trim(texto_libro)
print(texto_libro)}
for(producto in listado_individual){
print("=========================== ITEMS =======================")
#titulos libros
libro <- html_nodes(producto, css = ".title")
#link_libro <- html_nodes(libro, css = "a")
#link_libro <- html_attr(link_libro,"href")
#texto_link <- (paste("https://www.bookdepository.com",link_libro, sep = ""))
texto_libro <- html_text(libro)
texto_libro <- gsub("\n","", texto_libro)
texto_libro <- trim(texto_libro)
print(texto_libro)
#print(texto_link)
#Autor libro
autor_libro <- html_nodes(producto, css = ".author")
texto_autor <- html_text(autor_libro)
texto_autor <- gsub("\n", "", texto_autor)
texto_autor <- trim(texto_autor)
print(texto_autor)
#estrellas libros
star_libro <- html_nodes(producto, css = ".stars")
texto_star <- html_text(star_libro)
texto_star <- gsub("\n", "", texto_star)
texto_star <- trim(texto_star)
print(texto_star)
#fecha publicacion libro
fechapub_libro <- html_nodes(producto, css = ".published")
texto_fechapubl <- html_text(fechapub_libro)
texto_fechapubl <- gsub("\n", "",texto_fechapubl)
texto_fechapubl <- trim(texto_fechapubl)
#texto_fechapubl <- as.Date(texto_fechapubl)
print(texto_fechapubl)
#formato libro
formato_libro <- html_nodes(producto, css= ".format")
texto_formato <- html_text(formato_libro)
texto_formato <- gsub("\n", "",texto_formato)
texto_formato <- trim(texto_formato)
print(texto_formato)
#precio libro
precio_libro <- html_nodes(producto, css= ".price")
texto_precio <- html_text(precio_libro)
texto_precio <- gsub("\n", "",texto_precio)
texto_precio <- gsub("[CLP]", "", texto_precio)
texto_precio <- gsub("[$]","", texto_precio)
texto_precio <- gsub("[.]", "", texto_precio)
texto_precio <- trim(texto_precio)
#texto_precio <- as.numeric(texto_precio)
print(texto_precio)
#link libros
link_libro <- html_nodes(libro, css = "a")
link_libro <- html_attr(link_libro,"href")
texto_link <- (paste("https://www.bookdepository.com",link_libro, sep = ""))
print(texto_link)}
subpagina <- read_html(texto_link)
for (producto in subpagina){
cant_coment <- html_nodes(producto, css= ".rating-count")
texto_cant_coment <- html_text(cant_coment)
print(texto_cant_coment)
}
subpagina <- read_html(texto_link)
cant_comentarios <- html_nodes(subpagina,xpath ="/html/body/div[2]/div[5]/div/div/div[1]/div[1]/div[3]/div/div[1]/div/span[2]")
library("rvest")
library("gdata")
library("rvest")
library("gdata")
library(tidyverse)
setwd("~/Github/Trabajo_BigData")
#Carga de base de datos
Info_bookdepository <- read.csv("informacion_bookdepository.csv")
#se agrega variable sitio web para poder utilizar una base combinada despues y variable mill
#comentarios para que sea mas amigable el numero
Info_bookdepository <- mutate(Info_bookdepository, Sitio_web= "Bookdepository")
Info_bookdepository <- mutate(Info_bookdepository, mill_Comentarios=Cant_coment/1000000)
#se eliminan aquellos libros extraidos los cuales no tienen precio (porque no estan disponibles)
#y la editorial se pone en mayuscula
Info_bookdepository2 <- Info_bookdepository%>%filter(Precio!='is.na')
Info_bookdepository2$Editorial <- str_to_upper(Info_bookdepository2$Editorial, locale = "en")
#10 libros mas populares (valoracion)
top_bookde <- Info_bookdepository2%>% arrange(desc(Cant_coment,Valoracion))%>%
filter(row_number()<=10)
#grafico valoracion de libros
ggplot(top_bookde, aes(x=Titulo, y=Valoracion)) +
geom_point(aes(size=mill_Comentarios, color=Valoracion))+
geom_segment(aes(x=Titulo, xend=Titulo, y=4, yend=Valoracion), color="skyblue") +
coord_flip()+ ggtitle("Libros mas valorados")+ theme_classic()
ggplot(top_bookde, aes(x=Titulo, y=mill_Comentarios)) +
geom_point(aes(size=Valoracion, color=mill_Comentarios))+
geom_segment(aes(x=Titulo, xend=Titulo, y=0, yend=mill_Comentarios), color="skyblue") +
coord_flip()+ ggtitle("Libros mas valorados")+ theme_classic()
#grafico con los precios (con outliers)
ggplot(Info_bookdepository2, aes(x=Sitio_web, y=Precio))+
geom_boxplot(fill="skyblue", alpha=0.4) +
stat_summary(fun= mean, geom = "point", shape=20, size=4, color="red", fill="red")+
theme_classic()
#grafico con acercamiento a boxplot
ggplot(Info_bookdepository2, aes(x=Sitio_web, y=Precio))+
geom_boxplot(fill="skyblue", alpha=0.4) +
stat_summary(fun= mean, geom = "point", shape=20, size=4, color="red", fill="red")+
theme_classic() + scale_y_continuous(limits=c(5000, 35000))
summary(Info_bookdepository2$Precio)
#grafico para autores
Autores_bookde <-select(Info_bookdepository2,Autor,Valoracion, mill_Comentarios)%>%filter(Autor!="")
Autores_bookde <- Autores_bookde%>%group_by(Autor)%>% summarise(promedio=mean(Valoracion), n=n())%>%
arrange(desc(promedio,n))
#grafico para autores
ggplot(Autores_bookde, aes(x=promedio, y=n)) + geom_jitter(aes(color=Autor))
select(Info_bookdepository2,Autor,Valoracion, mill_Comentarios)%>%
count(Autor)%>% arrange(desc(n, Valoracion))
View(Autores_bookde)
View(Info_bookdepository2)
#grafico para autores
Autores_bookde <-select(Info_bookdepository2,Autor,Valoracion, Cant_comment)%>%filter(Autor!="")
View(Info_bookdepository2)
#grafico para autores
Autores_bookde <-select(Info_bookdepository2,Autor,Valoracion, Cant_coment)%>%filter(Autor!="")
Autores_bookde <- Autores_bookde%>%group_by(Autor)%>% summarise(promedio=mean(Valoracion), n=n())%>%
arrange(desc(promedio,n))
View(Autores_bookde)
View(Autores_bookde)
Autores_bookde <- Autores_bookde%>%group_by(Autor)%>% summarise(promedio=mean(Valoracion), n=n())%>%
arrange(desc(promedio,n))%>%filter(promedio>=4)
#grafico para autores mas valorados
Autores_bookde <-select(Info_bookdepository2,Autor,Valoracion, Cant_coment)%>%filter(Autor!="")
Autores_bookde <- Autores_bookde%>%group_by(Autor)%>% summarise(promedio=mean(Valoracion), n=n())%>%
arrange(desc(promedio,n))
View(Autores_bookde)
Autores_bookde <- filter(promedio>=4.000000)
Autores_bookde <- Autores_bookde%>%filter(promedio>=4.000000)
View(Autores_bookde)
#grafico para autores
ggplot(Autores_bookde, aes(x=promedio, y=n)) + geom_jitter(aes(color=Autor))
Autores_bookde <- Autores_bookde%>%filter(promedio>=4.300000)
#grafico para autores
ggplot(Autores_bookde, aes(x=promedio, y=n)) + geom_jitter(aes(color=Autor))
#grafico para autores
ggplot(Autores_bookde, aes(x=promedio, y=n)) + geom_jitter()
#grafico para autores
ggplot(Autores_bookde, aes(x=promedio, y=n)) + geom_jitter()+ ylab(Cantidad de libros)
#grafico para autores
ggplot(Autores_bookde, aes(x=promedio, y=n)) + geom_jitter()+ ylab("Cantidad de libros")
Autores_bookde <- Autores_bookde%>%filter(promedio>=4.000000)
Autores_bookde <- Autores_bookde%>%group_by(Autor)%>% summarise(promedio=mean(Valoracion), n=n())%>%
arrange(desc(promedio,n))
#grafico para autores mas valorados
Autores_bookde <-select(Info_bookdepository2,Autor,Valoracion, Cant_coment)%>%filter(Autor!="")
Autores_bookde <- Autores_bookde%>%group_by(Autor)%>% summarise(promedio=mean(Valoracion), n=n())%>%
arrange(desc(promedio,n))
Autores_bookde <- Autores_bookde%>%filter(promedio>=4.000000)
View(Autores_bookde)
Autores_bookde <- Autores_bookde%>%group_by(Autor)%>% summarise(promedio=mean(Valoracion), n=n())%>%
arrange(desc(promedio,n))
#grafico para autores mas valorados
Autores_bookde <-select(Info_bookdepository2,Autor,Valoracion, Cant_coment)%>%filter(Autor!="")
Autores_bookde <- Autores_bookde%>%group_by(Autor)%>% summarise(promedio=mean(Valoracion), n=n())%>%
arrange(desc(promedio,n))
#grafico para autores
ggplot(Autores_bookde, aes(x=promedio, y=n)) + geom_jitter()+ ylab("Cantidad de libros")
#grafico para autores
ggplot(Autores_bookde, aes(x=promedio, y=n)) + geom_jitter()+ ylab("Cantidad de libros") +
xlab("Promedio valoracion")
#grafico para autores
ggplot(Autores_bookde, aes(x=promedio, y=n)) + geom_jitter()+ ylab("Cantidad de libros por autor") +
xlab("Promedio valoracion")
Autores_bookde <- Autores_bookde%>%filter(n>=10)
#grafico para autores
ggplot(Autores_bookde, aes(x=promedio, y=n)) + geom_jitter(aes(color=Autor))+ ylab("Cantidad de libros por autor") +
xlab("Promedio valoracion")
Autores_bookde <- Autores_bookde%>%filter(promedio>=3)%>%filter(n>=10)
Autores_bookde <- Autores_bookde%>%filter(promedio>=3)%>%filter(n>=9)
Autores_bookde <- Autores_bookde%>%filter(promedio>=3)%>%filter(n>=9)
Autores_bookde <- Autores_bookde%>%filter(promedio>=3)%>%filter(n>=8)
Autores_bookde <- Autores_bookde%>%filter(promedio>=3.5)%>%filter(n>=10)
Autores_bookde <- Autores_bookde%>%filter(promedio>=3.0)%>%filter(n>=10)
Autores_bookde <- Autores_bookde%>%filter(promedio>=3)%>%filter(n>=10)
